// <auto-generated />
using System;
using Altamira.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Altamira.DataAccess.Migrations
{
    [DbContext(typeof(AltamiraDbContext))]
    [Migration("20210317140913_altamira")]
    partial class altamira
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Altamira.Entities.Concrete.Address", b =>
                {
                    b.Property<int>("addressid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("geoid")
                        .HasColumnType("int");

                    b.Property<string>("street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("suite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zipcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("addressid");

                    b.HasIndex("geoid");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Altamira.Entities.Concrete.Company", b =>
                {
                    b.Property<int>("companyid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("catchPhrase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("companyid");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Altamira.Entities.Concrete.Geo", b =>
                {
                    b.Property<int>("geoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("lat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lng")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("geoid");

                    b.ToTable("geos");
                });

            modelBuilder.Entity("Altamira.Entities.Concrete.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("addressid")
                        .HasColumnType("int");

                    b.Property<int?>("companyid")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("addressid");

                    b.HasIndex("companyid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Altamira.Entities.Concrete.Address", b =>
                {
                    b.HasOne("Altamira.Entities.Concrete.Geo", "geo")
                        .WithMany()
                        .HasForeignKey("geoid");

                    b.Navigation("geo");
                });

            modelBuilder.Entity("Altamira.Entities.Concrete.User", b =>
                {
                    b.HasOne("Altamira.Entities.Concrete.Address", "address")
                        .WithMany()
                        .HasForeignKey("addressid");

                    b.HasOne("Altamira.Entities.Concrete.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyid");

                    b.Navigation("address");

                    b.Navigation("company");
                });
#pragma warning restore 612, 618
        }
    }
}
